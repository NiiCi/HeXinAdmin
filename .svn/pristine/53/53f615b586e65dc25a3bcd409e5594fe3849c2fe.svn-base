package controller.app;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import entity.User;
import entity.UserAccountLog;
import entity.UserWithdraw;
import entity.app.AppUserBillLog;
import service.UserAccountLogService;
import service.UserWithdrawService;

@Controller
public class AppUserAccountLogController {
	@Autowired
	UserAccountLogService userAccountLogService;
	@Autowired
	UserWithdrawService userWithdrawService;
	//查询用户余额变动记录
	@RequestMapping(value="appUserAccountLogContrroler",method=RequestMethod.GET)
	@ResponseBody
 	public List<AppUserBillLog> getUserCurrentLog(int userId){
		//余额转入活/定期产品记录
 		List<UserAccountLog> miplogList = userAccountLogService.getUserMoneyInProductLog(userId);
 		//活期存款转出到余额记录
 		List<UserAccountLog> moplogList = userAccountLogService.getUserMoneyOutProductLog(userId);
 		//余额提现记录
 		UserWithdraw userWithdraw = new UserWithdraw();
 		userWithdraw.setCreatedBy(userId);
 		List<UserWithdraw> withDrawList = userWithdrawService.selectAll(userWithdraw);
 		List<AppUserBillLog> appList = new ArrayList<>();
 		for (UserAccountLog mipLog : miplogList) {
 			AppUserBillLog appUserBillLog = new AppUserBillLog();
 			System.out.println("操作金额: -------"+mipLog.getMoneyOperate());
 			System.out.println("操作产品: -------"+mipLog.getWishId());
 			appUserBillLog.setUserId(mipLog.getUserId());
 			appUserBillLog.setMoney(mipLog.getMoneyOperate());
 			appUserBillLog.setTime(mipLog.getCreatedAt());
 			if (mipLog.getWishId() == 1) {
 				appUserBillLog.setMsg("账户余额转活期存款");
			}else{
				appUserBillLog.setMsg("账户余额转定期存款");
			}
 			appList.add(appUserBillLog);
		}
 		for (UserAccountLog mopLog : moplogList) {
			AppUserBillLog appUserBillLog = new AppUserBillLog();
			System.out.println("操作金额: -------"+mopLog.getMoneyOperate());
 			System.out.println("操作产品: -------"+mopLog.getWishId());
 			appUserBillLog.setUserId(mopLog.getUserId());
 			appUserBillLog.setMoney(mopLog.getMoneyOperate());
 			appUserBillLog.setTime(mopLog.getCreatedAt());
 			appUserBillLog.setMsg("活期存款转账户余额");
 			appList.add(appUserBillLog);
		}
 		for (UserWithdraw withdraw : withDrawList) {
 			AppUserBillLog appUserBillLog = new AppUserBillLog();
			System.out.println("操作金额: -------"+withdraw.getMoneyWithdraw());
			System.out.println("手续费: -------"+withdraw.getCharge());
			appUserBillLog.setUserId(withdraw.getCreatedBy());
 			appUserBillLog.setMoney(withdraw.getMoneyWithdraw());
 			appUserBillLog.setTime(withdraw.getCreatedAt());
 			appUserBillLog.setMsg("账户余额提现");
 			appList.add(appUserBillLog);
		}
 		return appList;
 	}
}
