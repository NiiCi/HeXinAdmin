<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserWithdrawMapper">
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
  <resultMap id="BaseResultMap" type="entity.UserWithdraw">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="trade_order" jdbcType="VARCHAR" property="tradeOrder" />
    <result column="money_withdraw" jdbcType="DECIMAL" property="moneyWithdraw" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="trust_remark" jdbcType="VARCHAR" property="trustRemark" />
    <result column="trust_status" jdbcType="INTEGER" property="trustStatus" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <result column="updated_at" jdbcType="INTEGER" property="updatedAt" />
    <result column="created_ip" jdbcType="VARCHAR" property="createdIp" />
    <result column="charge" jdbcType="DOUBLE" property="charge" />
    <result column="created_by_phone" jdbcType="VARCHAR" property="createdByPhone" />
    <result column="created_by_name" jdbcType="VARCHAR" property="createdByName" />
    <result column="created_by_idcard" jdbcType="VARCHAR" property="createdByIdcard" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user_withdraw
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.UserWithdraw">
    insert into tb_user_withdraw (id, updated_by, status, 
      trade_order, money_withdraw, remark, 
      trust_remark, trust_status, created_by, 
      created_at, updated_at, created_ip, 
      charge, created_by_phone, created_by_name, 
      created_by_idcard, type)
    values (#{id,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{tradeOrder,jdbcType=VARCHAR}, #{moneyWithdraw,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{trustRemark,jdbcType=VARCHAR}, #{trustStatus,jdbcType=INTEGER}, #{createdBy,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=INTEGER}, #{updatedAt,jdbcType=INTEGER}, #{createdIp,jdbcType=VARCHAR}, 
      #{charge,jdbcType=DOUBLE}, #{createdByPhone,jdbcType=VARCHAR}, #{createdByName,jdbcType=VARCHAR}, 
      #{createdByIdcard,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="entity.UserWithdraw">
    update tb_user_withdraw
    set updated_by = #{updatedBy,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      trade_order = #{tradeOrder,jdbcType=VARCHAR},
      money_withdraw = #{moneyWithdraw,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      trust_remark = #{trustRemark,jdbcType=VARCHAR},
      trust_status = #{trustStatus,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=INTEGER},
      created_ip = #{createdIp,jdbcType=VARCHAR},
      charge = #{charge,jdbcType=DOUBLE},
      created_by_phone = #{createdByPhone,jdbcType=VARCHAR},
      created_by_name = #{createdByName,jdbcType=VARCHAR},
      created_by_idcard = #{createdByIdcard,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * where id = #{id,jdbcType=INTEGER}
  </select> 
<!--   <select id="selectAll" resultMap="BaseResultMap" flushCache="false">
    select * from tb_user_withdraw
  </select> -->
  
  <!-- 综合查询提现明细 -->
  <select id="selectAll" resultMap="BaseResultMap" flushCache="false">
  	select * from tb_user_withdraw
  	<where>
  		<if test="createdBy != null and createdBy != '' ">created_by = #{createdBy}</if>
  		<if test="createdByPhone != null and createdByPhone != '' ">and created_by_phone = #{createdByPhone}</if>
  		<if test="createdByName != null and createdByName != '' ">and created_by_name = #{createdByName}</if>
  		<if test="createdByIdcard != null and createdByIdcard != '' ">and created_by_idcard = #{createdByIdcard}</if>
  		<if test="moneyWithdraw != null and moneyWithdraw != '' ">and money_withdraw = #{moneyWithdraw}</if>
  		<if test="type != null and type != '' ">and type = #{type}</if>
  	</where>
  </select>
  <!-- 累计提现总额 -->
  <select id="getTotalWithdraw" resultType="double">
  	select sum(money_withdraw) 
  	from tb_user_withdraw where status = 1
  </select>
  <!-- 有效提现人数 -->
  <select id="getWithdrawPeopleCount" resultType="int">
  	select count(*) 
  	from (select * from tb_user_withdraw 
  	where status=1 group by created_by) as newTable
  </select>
</mapper>